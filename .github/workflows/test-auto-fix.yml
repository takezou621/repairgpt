name: Test Auto Fix

on:
  workflow_run:
    workflows: ["Test Automation"]
    types:
      - completed
  workflow_dispatch:
    inputs:
      workflow_run_id:
        description: 'Workflow run ID to fix'
        required: false
        type: string

permissions:
  contents: write
  pull-requests: write
  actions: read
  checks: read

jobs:
  check-and-fix:
    if: ${{ github.event.workflow_run.conclusion == 'failure' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install PyGithub requests pytest pytest-cov pytest-asyncio pytest-mock
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f tests/requirements-test.txt ]; then pip install -r tests/requirements-test.txt; fi
    
    - name: Download test logs
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        WORKFLOW_RUN_ID=${{ github.event.workflow_run.id || github.event.inputs.workflow_run_id }}
        if [ -z "$WORKFLOW_RUN_ID" ]; then
          echo "No workflow run ID provided"
          exit 1
        fi
        
        # GitHub APIを使用してログをダウンロード
        curl -H "Authorization: token $GITHUB_TOKEN" \
             -H "Accept: application/vnd.github.v3+json" \
             -L "https://api.github.com/repos/${{ github.repository }}/actions/runs/$WORKFLOW_RUN_ID/logs" \
             -o workflow_logs.zip || true
        
        # ログを解凍
        if [ -f workflow_logs.zip ]; then
          unzip -q workflow_logs.zip -d workflow_logs || true
        fi
    
    - name: Analyze test failures
      id: analyze
      run: |
        python scripts/analyze_test_failures.py
    
    - name: Apply auto fixes
      id: fix
      if: steps.analyze.outputs.fixable == 'true'
      run: |
        python scripts/apply_test_fixes.py
    
    - name: Run tests locally
      if: steps.fix.outputs.fixed == 'true'
      run: |
        export PYTHONPATH="${GITHUB_WORKSPACE}/src:${PYTHONPATH}"
        pytest tests/ -v --maxfail=10 || true
    
    - name: Create fix branch
      if: steps.fix.outputs.fixed == 'true'
      id: branch
      run: |
        BRANCH_NAME="auto-fix/test-failures-$(date +%Y%m%d-%H%M%S)"
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git checkout -b $BRANCH_NAME
        git add -A
        git commit -m "fix: Auto-fix test failures
        
        - Analyzed test failures from workflow run ${{ github.event.workflow_run.id || github.event.inputs.workflow_run_id }}
        - Applied automatic fixes for common issues
        - Fixed issues: ${{ steps.fix.outputs.fixed_issues }}
        
        🤖 Generated by Test Auto Fix workflow" || echo "No changes to commit"
        
        git push origin $BRANCH_NAME || echo "Failed to push branch"
        echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
    
    - name: Create Pull Request
      if: steps.branch.outputs.branch_name != ''
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh pr create \
          --title "🔧 Auto-fix: Test failures from workflow run #${{ github.event.workflow_run.id || github.event.inputs.workflow_run_id }}" \
          --body "## 🤖 Automated Test Fix

This PR was automatically generated to fix test failures detected in workflow run #${{ github.event.workflow_run.id || github.event.inputs.workflow_run_id }}.

### 📊 Analysis Results
- **Total failures analyzed**: ${{ steps.analyze.outputs.total_failures }}
- **Fixable issues**: ${{ steps.analyze.outputs.fixable_count }}
- **Fixed issues**: ${{ steps.fix.outputs.fixed_count }}

### 🔧 Fixes Applied
${{ steps.fix.outputs.fix_summary }}

### 📝 Fixed Issues
- ${{ steps.fix.outputs.fixed_issues }}

### ⚡ Actions Required
1. Review the automated fixes
2. Run tests locally to verify
3. Merge if all tests pass

---
*This PR was automatically generated by the Test Auto Fix workflow*" \
          --base main \
          --head ${{ steps.branch.outputs.branch_name }}
    
    - name: Comment on original PR
      if: github.event.workflow_run.event == 'pull_request'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # 元のPRにコメントを追加
        PR_NUMBER=$(gh api repos/${{ github.repository }}/actions/runs/${{ github.event.workflow_run.id }} --jq '.pull_requests[0].number' || echo "")
        if [ -n "$PR_NUMBER" ]; then
          gh pr comment $PR_NUMBER --body "## 🔧 Test Auto-Fix Attempted

I detected test failures and attempted to fix them automatically.

**Status**: ${{ steps.fix.outputs.fixed == 'true' && '✅ Fixes applied' || '❌ No automatic fixes available' }}

${{ steps.fix.outputs.fixed == 'true' && format('A fix PR has been created: #{0}', steps.branch.outputs.pr_number) || 'Please review and fix the test failures manually.' }}"
        fi