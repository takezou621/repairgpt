name: Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.9'

jobs:
  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-lint-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-lint-
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black flake8 isort mypy pylint bandit
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
    
    - name: Create src directory if not exists
      run: mkdir -p src
    
    - name: Check code formatting with Black
      run: |
        if [ -d "src" ] && [ "$(find src -name '*.py' | head -1)" ]; then
          black --check --diff src/
        else
          echo "No Python files found in src/ - skipping Black check"
        fi
    
    - name: Check import sorting with isort
      run: |
        if [ -d "src" ] && [ "$(find src -name '*.py' | head -1)" ]; then
          isort --check-only --diff src/
        else
          echo "No Python files found in src/ - skipping isort check"
        fi
    
    - name: Lint with flake8
      run: |
        if [ -d "src" ] && [ "$(find src -name '*.py' | head -1)" ]; then
          flake8 src/ --max-line-length=88 --extend-ignore=E203,W503
        else
          echo "No Python files found in src/ - skipping flake8 check"
        fi
    
    - name: Type checking with mypy
      run: |
        if [ -d "src" ] && [ "$(find src -name '*.py' | head -1)" ]; then
          mypy src/ --ignore-missing-imports --no-strict-optional
        else
          echo "No Python files found in src/ - skipping mypy check"
        fi
    
    - name: Advanced linting with pylint
      run: |
        if [ -d "src" ] && [ "$(find src -name '*.py' | head -1)" ]; then
          pylint src/ --disable=C0114,C0115,C0116 --fail-under=8.0
        else
          echo "No Python files found in src/ - skipping pylint check"
        fi
      continue-on-error: true
    
    - name: Security linting with bandit
      run: |
        if [ -d "src" ] && [ "$(find src -name '*.py' | head -1)" ]; then
          bandit -r src/ -f json -o bandit-report.json
          bandit -r src/
        else
          echo "No Python files found in src/ - skipping bandit check"
        fi
      continue-on-error: true
    
    - name: Upload bandit report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: bandit-security-report
        path: bandit-report.json

  documentation:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pydocstyle sphinx sphinx-rtd-theme
    
    - name: Check docstring style
      run: |
        if [ -d "src" ] && [ "$(find src -name '*.py' | head -1)" ]; then
          pydocstyle src/ --convention=google
        else
          echo "No Python files found in src/ - skipping pydocstyle check"
        fi
      continue-on-error: true
    
    - name: Check for TODO/FIXME comments
      run: |
        echo "Checking for TODO/FIXME comments..."
        if grep -r "TODO\|FIXME" src/ docs/ 2>/dev/null || true; then
          echo "Found TODO/FIXME comments - please review"
        else
          echo "No TODO/FIXME comments found"
        fi
      continue-on-error: true

  complexity:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install radon xenon
    
    - name: Check cyclomatic complexity
      run: |
        if [ -d "src" ] && [ "$(find src -name '*.py' | head -1)" ]; then
          radon cc src/ -s -a
          echo "Checking for high complexity functions..."
          xenon --max-absolute B --max-modules A --max-average A src/ || true
        else
          echo "No Python files found in src/ - skipping complexity check"
        fi
      continue-on-error: true
    
    - name: Check maintainability index
      run: |
        if [ -d "src" ] && [ "$(find src -name '*.py' | head -1)" ]; then
          radon mi src/ -s
        else
          echo "No Python files found in src/ - skipping maintainability check"
        fi
      continue-on-error: true